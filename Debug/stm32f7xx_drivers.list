
stm32f7xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000098c  080001c8  080001c8  000011c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000b54  08000b5c  00001b5c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000b54  08000b54  00001b5c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000b54  08000b54  00001b5c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000b54  08000b5c  00001b5c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000b54  08000b54  00001b54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000b58  08000b58  00001b58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001b5c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000b5c  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000b5c  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00001b5c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a51  00000000  00000000  00001b8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002bd  00000000  00000000  000025dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  000028a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000008c  00000000  00000000  00002968  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002575  00000000  00000000  000029f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000011a2  00000000  00000000  00004f69  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000093ce  00000000  00000000  0000610b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000f4d9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0000f51c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004f  00000000  00000000  0000f7a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	@ (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	@ (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	20000000 	.word	0x20000000
 80001e4:	00000000 	.word	0x00000000
 80001e8:	08000b3c 	.word	0x08000b3c

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	@ (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	@ (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	@ (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	20000004 	.word	0x20000004
 8000204:	08000b3c 	.word	0x08000b3c

08000208 <Delay>:
#include <stdint.h>
#include <string.h>

#include "stm32f746xx.h"

void Delay() {
 8000208:	b480      	push	{r7}
 800020a:	b083      	sub	sp, #12
 800020c:	af00      	add	r7, sp, #0
    for (uint32_t i = 0; i < 500000 / 2; i++) {
 800020e:	2300      	movs	r3, #0
 8000210:	607b      	str	r3, [r7, #4]
 8000212:	e002      	b.n	800021a <Delay+0x12>
 8000214:	687b      	ldr	r3, [r7, #4]
 8000216:	3301      	adds	r3, #1
 8000218:	607b      	str	r3, [r7, #4]
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	4a04      	ldr	r2, [pc, #16]	@ (8000230 <Delay+0x28>)
 800021e:	4293      	cmp	r3, r2
 8000220:	d9f8      	bls.n	8000214 <Delay+0xc>
        // Simple delay loop
    }
}
 8000222:	bf00      	nop
 8000224:	bf00      	nop
 8000226:	370c      	adds	r7, #12
 8000228:	46bd      	mov	sp, r7
 800022a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800022e:	4770      	bx	lr
 8000230:	0003d08f 	.word	0x0003d08f

08000234 <main>:

int main(void) {
 8000234:	b580      	push	{r7, lr}
 8000236:	b086      	sub	sp, #24
 8000238:	af00      	add	r7, sp, #0
    GPIO_Handle_t gpioA, gpioB;
    memset(&gpioA, 0, sizeof(gpioA));
 800023a:	f107 030c 	add.w	r3, r7, #12
 800023e:	220c      	movs	r2, #12
 8000240:	2100      	movs	r1, #0
 8000242:	4618      	mov	r0, r3
 8000244:	f000 fc4e 	bl	8000ae4 <memset>
    memset(&gpioB, 0, sizeof(gpioB));
 8000248:	463b      	mov	r3, r7
 800024a:	220c      	movs	r2, #12
 800024c:	2100      	movs	r1, #0
 800024e:	4618      	mov	r0, r3
 8000250:	f000 fc48 	bl	8000ae4 <memset>

    gpioA.pGPIOx = GPIOA; // Button on PA3
 8000254:	4b19      	ldr	r3, [pc, #100]	@ (80002bc <main+0x88>)
 8000256:	60fb      	str	r3, [r7, #12]
    gpioB.pGPIOx = GPIOB; // LED on PB0
 8000258:	4b19      	ldr	r3, [pc, #100]	@ (80002c0 <main+0x8c>)
 800025a:	603b      	str	r3, [r7, #0]

    // Button configuration (PA3)
    gpioA.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_3;
 800025c:	2303      	movs	r3, #3
 800025e:	743b      	strb	r3, [r7, #16]
    gpioA.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_RT; // Rising edge
 8000260:	2305      	movs	r3, #5
 8000262:	747b      	strb	r3, [r7, #17]
    gpioA.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000264:	2302      	movs	r3, #2
 8000266:	74bb      	strb	r3, [r7, #18]
    gpioA.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PD; // Pull-down
 8000268:	2302      	movs	r3, #2
 800026a:	74fb      	strb	r3, [r7, #19]
    gpioA.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP; // Not used for input, but harmless
 800026c:	2300      	movs	r3, #0
 800026e:	753b      	strb	r3, [r7, #20]

    // LED configuration (PB0)
    gpioB.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_0;
 8000270:	2300      	movs	r3, #0
 8000272:	713b      	strb	r3, [r7, #4]
    gpioB.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000274:	2301      	movs	r3, #1
 8000276:	717b      	strb	r3, [r7, #5]
    gpioB.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000278:	2302      	movs	r3, #2
 800027a:	71bb      	strb	r3, [r7, #6]
    gpioB.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800027c:	2300      	movs	r3, #0
 800027e:	71fb      	strb	r3, [r7, #7]
    gpioB.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000280:	2300      	movs	r3, #0
 8000282:	723b      	strb	r3, [r7, #8]

    // Enable clocks and initialize
    GPIO_PeriClockControl(GPIOA, ENABLE);
 8000284:	2101      	movs	r1, #1
 8000286:	480d      	ldr	r0, [pc, #52]	@ (80002bc <main+0x88>)
 8000288:	f000 f856 	bl	8000338 <GPIO_PeriClockControl>
    GPIO_PeriClockControl(GPIOB, ENABLE);
 800028c:	2101      	movs	r1, #1
 800028e:	480c      	ldr	r0, [pc, #48]	@ (80002c0 <main+0x8c>)
 8000290:	f000 f852 	bl	8000338 <GPIO_PeriClockControl>
    GPIO_Init(&gpioA);
 8000294:	f107 030c 	add.w	r3, r7, #12
 8000298:	4618      	mov	r0, r3
 800029a:	f000 f965 	bl	8000568 <GPIO_Init>
    GPIO_Init(&gpioB);
 800029e:	463b      	mov	r3, r7
 80002a0:	4618      	mov	r0, r3
 80002a2:	f000 f961 	bl	8000568 <GPIO_Init>

    // Configure NVIC
    GPIO_IRQPriorityConfig(IRQ_NO_EXTI3, 15); // Priority
 80002a6:	210f      	movs	r1, #15
 80002a8:	2009      	movs	r0, #9
 80002aa:	f000 fbd3 	bl	8000a54 <GPIO_IRQPriorityConfig>
    GPIO_IRQInterruptConfig(IRQ_NO_EXTI3, ENABLE); // Enable
 80002ae:	2101      	movs	r1, #1
 80002b0:	2009      	movs	r0, #9
 80002b2:	f000 fb49 	bl	8000948 <GPIO_IRQInterruptConfig>

    while (1) {} // Main loop
 80002b6:	bf00      	nop
 80002b8:	e7fd      	b.n	80002b6 <main+0x82>
 80002ba:	bf00      	nop
 80002bc:	40020000 	.word	0x40020000
 80002c0:	40020400 	.word	0x40020400

080002c4 <EXTI3_IRQHandler>:
}

void EXTI3_IRQHandler() {
 80002c4:	b580      	push	{r7, lr}
 80002c6:	af00      	add	r7, sp, #0

	 Delay(); // Simple delay to debounce
 80002c8:	f7ff ff9e 	bl	8000208 <Delay>

    GPIO_IRQHandler(GPIO_PIN_3); // Clear EXTI/NVIC pending bits
 80002cc:	2003      	movs	r0, #3
 80002ce:	f000 fbe9 	bl	8000aa4 <GPIO_IRQHandler>
    GPIO_ToggleOutputPin(GPIOB, GPIO_PIN_0); // Toggle LED
 80002d2:	2100      	movs	r1, #0
 80002d4:	4802      	ldr	r0, [pc, #8]	@ (80002e0 <EXTI3_IRQHandler+0x1c>)
 80002d6:	f000 fb21 	bl	800091c <GPIO_ToggleOutputPin>

}
 80002da:	bf00      	nop
 80002dc:	bd80      	pop	{r7, pc}
 80002de:	bf00      	nop
 80002e0:	40020400 	.word	0x40020400

080002e4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002e4:	480d      	ldr	r0, [pc, #52]	@ (800031c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002e6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002e8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002ec:	480c      	ldr	r0, [pc, #48]	@ (8000320 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ee:	490d      	ldr	r1, [pc, #52]	@ (8000324 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002f0:	4a0d      	ldr	r2, [pc, #52]	@ (8000328 <LoopForever+0xe>)
  movs r3, #0
 80002f2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002f4:	e002      	b.n	80002fc <LoopCopyDataInit>

080002f6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002f6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002f8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002fa:	3304      	adds	r3, #4

080002fc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002fc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002fe:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000300:	d3f9      	bcc.n	80002f6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000302:	4a0a      	ldr	r2, [pc, #40]	@ (800032c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000304:	4c0a      	ldr	r4, [pc, #40]	@ (8000330 <LoopForever+0x16>)
  movs r3, #0
 8000306:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000308:	e001      	b.n	800030e <LoopFillZerobss>

0800030a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800030a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800030c:	3204      	adds	r2, #4

0800030e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800030e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000310:	d3fb      	bcc.n	800030a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000312:	f000 fbef 	bl	8000af4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000316:	f7ff ff8d 	bl	8000234 <main>

0800031a <LoopForever>:

LoopForever:
  b LoopForever
 800031a:	e7fe      	b.n	800031a <LoopForever>
  ldr   r0, =_estack
 800031c:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 8000320:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000324:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000328:	08000b5c 	.word	0x08000b5c
  ldr r2, =_sbss
 800032c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000330:	2000001c 	.word	0x2000001c

08000334 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000334:	e7fe      	b.n	8000334 <ADC_IRQHandler>
	...

08000338 <GPIO_PeriClockControl>:
 * @brief  Enables or disables the peripheral clock for the given GPIO port.
 * @param  pGPIOx: Pointer to the GPIO port base address.
 * @param  EnorDi: ENABLE to enable the clock, DISABLE to disable the clock.
 * @retval None
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi) {
 8000338:	b480      	push	{r7}
 800033a:	b083      	sub	sp, #12
 800033c:	af00      	add	r7, sp, #0
 800033e:	6078      	str	r0, [r7, #4]
 8000340:	460b      	mov	r3, r1
 8000342:	70fb      	strb	r3, [r7, #3]

    if(EnorDi == ENABLE){
 8000344:	78fb      	ldrb	r3, [r7, #3]
 8000346:	2b01      	cmp	r3, #1
 8000348:	d178      	bne.n	800043c <GPIO_PeriClockControl+0x104>

      if (pGPIOx == GPIOA) {
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a7a      	ldr	r2, [pc, #488]	@ (8000538 <GPIO_PeriClockControl+0x200>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d106      	bne.n	8000360 <GPIO_PeriClockControl+0x28>

          GPIOA_PCLK_EN();
 8000352:	4b7a      	ldr	r3, [pc, #488]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000354:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000356:	4a79      	ldr	r2, [pc, #484]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000358:	f043 0301 	orr.w	r3, r3, #1
 800035c:	6313      	str	r3, [r2, #48]	@ 0x30
      else if(pGPIOx == GPIOK) {

          GPIOK_PCLK_DI();
      }
  }
}
 800035e:	e0e5      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOB) {
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a77      	ldr	r2, [pc, #476]	@ (8000540 <GPIO_PeriClockControl+0x208>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d106      	bne.n	8000376 <GPIO_PeriClockControl+0x3e>
          GPIOB_PCLK_EN();
 8000368:	4b74      	ldr	r3, [pc, #464]	@ (800053c <GPIO_PeriClockControl+0x204>)
 800036a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800036c:	4a73      	ldr	r2, [pc, #460]	@ (800053c <GPIO_PeriClockControl+0x204>)
 800036e:	f043 0302 	orr.w	r3, r3, #2
 8000372:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000374:	e0da      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOC) {
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	4a72      	ldr	r2, [pc, #456]	@ (8000544 <GPIO_PeriClockControl+0x20c>)
 800037a:	4293      	cmp	r3, r2
 800037c:	d106      	bne.n	800038c <GPIO_PeriClockControl+0x54>
          GPIOC_PCLK_EN();
 800037e:	4b6f      	ldr	r3, [pc, #444]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000380:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000382:	4a6e      	ldr	r2, [pc, #440]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000384:	f043 0304 	orr.w	r3, r3, #4
 8000388:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800038a:	e0cf      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOD) {
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	4a6e      	ldr	r2, [pc, #440]	@ (8000548 <GPIO_PeriClockControl+0x210>)
 8000390:	4293      	cmp	r3, r2
 8000392:	d106      	bne.n	80003a2 <GPIO_PeriClockControl+0x6a>
          GPIOD_PCLK_EN();
 8000394:	4b69      	ldr	r3, [pc, #420]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000396:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000398:	4a68      	ldr	r2, [pc, #416]	@ (800053c <GPIO_PeriClockControl+0x204>)
 800039a:	f043 0308 	orr.w	r3, r3, #8
 800039e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003a0:	e0c4      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOE) {
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	4a69      	ldr	r2, [pc, #420]	@ (800054c <GPIO_PeriClockControl+0x214>)
 80003a6:	4293      	cmp	r3, r2
 80003a8:	d106      	bne.n	80003b8 <GPIO_PeriClockControl+0x80>
          GPIOE_PCLK_EN();
 80003aa:	4b64      	ldr	r3, [pc, #400]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80003ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ae:	4a63      	ldr	r2, [pc, #396]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80003b0:	f043 0310 	orr.w	r3, r3, #16
 80003b4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003b6:	e0b9      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOF) {
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	4a65      	ldr	r2, [pc, #404]	@ (8000550 <GPIO_PeriClockControl+0x218>)
 80003bc:	4293      	cmp	r3, r2
 80003be:	d106      	bne.n	80003ce <GPIO_PeriClockControl+0x96>
          GPIOF_PCLK_EN();
 80003c0:	4b5e      	ldr	r3, [pc, #376]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80003c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003c4:	4a5d      	ldr	r2, [pc, #372]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80003c6:	f043 0320 	orr.w	r3, r3, #32
 80003ca:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003cc:	e0ae      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOG) {
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	4a60      	ldr	r2, [pc, #384]	@ (8000554 <GPIO_PeriClockControl+0x21c>)
 80003d2:	4293      	cmp	r3, r2
 80003d4:	d106      	bne.n	80003e4 <GPIO_PeriClockControl+0xac>
          GPIOG_PCLK_EN();
 80003d6:	4b59      	ldr	r3, [pc, #356]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80003d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003da:	4a58      	ldr	r2, [pc, #352]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80003dc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80003e0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003e2:	e0a3      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOH) {
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	4a5c      	ldr	r2, [pc, #368]	@ (8000558 <GPIO_PeriClockControl+0x220>)
 80003e8:	4293      	cmp	r3, r2
 80003ea:	d106      	bne.n	80003fa <GPIO_PeriClockControl+0xc2>
          GPIOH_PCLK_EN();
 80003ec:	4b53      	ldr	r3, [pc, #332]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80003ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003f0:	4a52      	ldr	r2, [pc, #328]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80003f2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80003f6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003f8:	e098      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOI) {
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4a57      	ldr	r2, [pc, #348]	@ (800055c <GPIO_PeriClockControl+0x224>)
 80003fe:	4293      	cmp	r3, r2
 8000400:	d106      	bne.n	8000410 <GPIO_PeriClockControl+0xd8>
          GPIOI_PCLK_EN();
 8000402:	4b4e      	ldr	r3, [pc, #312]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000404:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000406:	4a4d      	ldr	r2, [pc, #308]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000408:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800040c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800040e:	e08d      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOJ) {
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	4a53      	ldr	r2, [pc, #332]	@ (8000560 <GPIO_PeriClockControl+0x228>)
 8000414:	4293      	cmp	r3, r2
 8000416:	d106      	bne.n	8000426 <GPIO_PeriClockControl+0xee>
          GPIOJ_PCLK_EN();
 8000418:	4b48      	ldr	r3, [pc, #288]	@ (800053c <GPIO_PeriClockControl+0x204>)
 800041a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800041c:	4a47      	ldr	r2, [pc, #284]	@ (800053c <GPIO_PeriClockControl+0x204>)
 800041e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000422:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000424:	e082      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOK) {
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	4a4e      	ldr	r2, [pc, #312]	@ (8000564 <GPIO_PeriClockControl+0x22c>)
 800042a:	4293      	cmp	r3, r2
 800042c:	d17e      	bne.n	800052c <GPIO_PeriClockControl+0x1f4>
          GPIOK_PCLK_EN();
 800042e:	4b43      	ldr	r3, [pc, #268]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000430:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000432:	4a42      	ldr	r2, [pc, #264]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000434:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000438:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800043a:	e077      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      if (pGPIOx == GPIOA) {
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	4a3e      	ldr	r2, [pc, #248]	@ (8000538 <GPIO_PeriClockControl+0x200>)
 8000440:	4293      	cmp	r3, r2
 8000442:	d106      	bne.n	8000452 <GPIO_PeriClockControl+0x11a>
          GPIOA_PCLK_DI();
 8000444:	4b3d      	ldr	r3, [pc, #244]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000446:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000448:	4a3c      	ldr	r2, [pc, #240]	@ (800053c <GPIO_PeriClockControl+0x204>)
 800044a:	f023 0301 	bic.w	r3, r3, #1
 800044e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000450:	e06c      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOB) {
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	4a3a      	ldr	r2, [pc, #232]	@ (8000540 <GPIO_PeriClockControl+0x208>)
 8000456:	4293      	cmp	r3, r2
 8000458:	d106      	bne.n	8000468 <GPIO_PeriClockControl+0x130>
          GPIOB_PCLK_DI();
 800045a:	4b38      	ldr	r3, [pc, #224]	@ (800053c <GPIO_PeriClockControl+0x204>)
 800045c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800045e:	4a37      	ldr	r2, [pc, #220]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000460:	f023 0302 	bic.w	r3, r3, #2
 8000464:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000466:	e061      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOC) {
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	4a36      	ldr	r2, [pc, #216]	@ (8000544 <GPIO_PeriClockControl+0x20c>)
 800046c:	4293      	cmp	r3, r2
 800046e:	d106      	bne.n	800047e <GPIO_PeriClockControl+0x146>
          GPIOC_PCLK_DI();
 8000470:	4b32      	ldr	r3, [pc, #200]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000472:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000474:	4a31      	ldr	r2, [pc, #196]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000476:	f023 0304 	bic.w	r3, r3, #4
 800047a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800047c:	e056      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOD) {
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	4a31      	ldr	r2, [pc, #196]	@ (8000548 <GPIO_PeriClockControl+0x210>)
 8000482:	4293      	cmp	r3, r2
 8000484:	d106      	bne.n	8000494 <GPIO_PeriClockControl+0x15c>
          GPIOD_PCLK_DI();
 8000486:	4b2d      	ldr	r3, [pc, #180]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000488:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800048a:	4a2c      	ldr	r2, [pc, #176]	@ (800053c <GPIO_PeriClockControl+0x204>)
 800048c:	f023 0308 	bic.w	r3, r3, #8
 8000490:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000492:	e04b      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOE) {
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	4a2d      	ldr	r2, [pc, #180]	@ (800054c <GPIO_PeriClockControl+0x214>)
 8000498:	4293      	cmp	r3, r2
 800049a:	d106      	bne.n	80004aa <GPIO_PeriClockControl+0x172>
          GPIOE_PCLK_DI();
 800049c:	4b27      	ldr	r3, [pc, #156]	@ (800053c <GPIO_PeriClockControl+0x204>)
 800049e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004a0:	4a26      	ldr	r2, [pc, #152]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80004a2:	f023 0310 	bic.w	r3, r3, #16
 80004a6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004a8:	e040      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOF) {
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	4a28      	ldr	r2, [pc, #160]	@ (8000550 <GPIO_PeriClockControl+0x218>)
 80004ae:	4293      	cmp	r3, r2
 80004b0:	d106      	bne.n	80004c0 <GPIO_PeriClockControl+0x188>
          GPIOF_PCLK_DI();
 80004b2:	4b22      	ldr	r3, [pc, #136]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80004b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004b6:	4a21      	ldr	r2, [pc, #132]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80004b8:	f023 0320 	bic.w	r3, r3, #32
 80004bc:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004be:	e035      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOG) {
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	4a24      	ldr	r2, [pc, #144]	@ (8000554 <GPIO_PeriClockControl+0x21c>)
 80004c4:	4293      	cmp	r3, r2
 80004c6:	d106      	bne.n	80004d6 <GPIO_PeriClockControl+0x19e>
          GPIOG_PCLK_DI();
 80004c8:	4b1c      	ldr	r3, [pc, #112]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80004ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004cc:	4a1b      	ldr	r2, [pc, #108]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80004ce:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80004d2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004d4:	e02a      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOH) {
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	4a1f      	ldr	r2, [pc, #124]	@ (8000558 <GPIO_PeriClockControl+0x220>)
 80004da:	4293      	cmp	r3, r2
 80004dc:	d106      	bne.n	80004ec <GPIO_PeriClockControl+0x1b4>
          GPIOH_PCLK_DI();
 80004de:	4b17      	ldr	r3, [pc, #92]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80004e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004e2:	4a16      	ldr	r2, [pc, #88]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80004e4:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80004e8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004ea:	e01f      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOI) {
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	4a1b      	ldr	r2, [pc, #108]	@ (800055c <GPIO_PeriClockControl+0x224>)
 80004f0:	4293      	cmp	r3, r2
 80004f2:	d106      	bne.n	8000502 <GPIO_PeriClockControl+0x1ca>
          GPIOI_PCLK_DI();
 80004f4:	4b11      	ldr	r3, [pc, #68]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80004f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004f8:	4a10      	ldr	r2, [pc, #64]	@ (800053c <GPIO_PeriClockControl+0x204>)
 80004fa:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80004fe:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000500:	e014      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOJ) {
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	4a16      	ldr	r2, [pc, #88]	@ (8000560 <GPIO_PeriClockControl+0x228>)
 8000506:	4293      	cmp	r3, r2
 8000508:	d106      	bne.n	8000518 <GPIO_PeriClockControl+0x1e0>
          GPIOJ_PCLK_DI();
 800050a:	4b0c      	ldr	r3, [pc, #48]	@ (800053c <GPIO_PeriClockControl+0x204>)
 800050c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800050e:	4a0b      	ldr	r2, [pc, #44]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000510:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000514:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000516:	e009      	b.n	800052c <GPIO_PeriClockControl+0x1f4>
      else if(pGPIOx == GPIOK) {
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	4a12      	ldr	r2, [pc, #72]	@ (8000564 <GPIO_PeriClockControl+0x22c>)
 800051c:	4293      	cmp	r3, r2
 800051e:	d105      	bne.n	800052c <GPIO_PeriClockControl+0x1f4>
          GPIOK_PCLK_DI();
 8000520:	4b06      	ldr	r3, [pc, #24]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000522:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000524:	4a05      	ldr	r2, [pc, #20]	@ (800053c <GPIO_PeriClockControl+0x204>)
 8000526:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800052a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800052c:	bf00      	nop
 800052e:	370c      	adds	r7, #12
 8000530:	46bd      	mov	sp, r7
 8000532:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000536:	4770      	bx	lr
 8000538:	40020000 	.word	0x40020000
 800053c:	40023800 	.word	0x40023800
 8000540:	40020400 	.word	0x40020400
 8000544:	40020800 	.word	0x40020800
 8000548:	40020c00 	.word	0x40020c00
 800054c:	40021000 	.word	0x40021000
 8000550:	40021400 	.word	0x40021400
 8000554:	40021800 	.word	0x40021800
 8000558:	40021c00 	.word	0x40021c00
 800055c:	40022000 	.word	0x40022000
 8000560:	40022400 	.word	0x40022400
 8000564:	40022800 	.word	0x40022800

08000568 <GPIO_Init>:
/**
 * @brief  Initializes the GPIO pin with the specified configuration.
 * @param  pGPIOHandle: Pointer to the GPIO handle structure containing pin configuration.
 * @retval None
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle) {
 8000568:	b480      	push	{r7}
 800056a:	b085      	sub	sp, #20
 800056c:	af00      	add	r7, sp, #0
 800056e:	6078      	str	r0, [r7, #4]

   uint32_t temp = 0;
 8000570:	2300      	movs	r3, #0
 8000572:	60fb      	str	r3, [r7, #12]

    if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <=GPIO_MODE_ANALOG) {
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	795b      	ldrb	r3, [r3, #5]
 8000578:	2b03      	cmp	r3, #3
 800057a:	d820      	bhi.n	80005be <GPIO_Init+0x56>

        temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	795b      	ldrb	r3, [r3, #5]
 8000580:	461a      	mov	r2, r3
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	791b      	ldrb	r3, [r3, #4]
 8000586:	005b      	lsls	r3, r3, #1
 8000588:	fa02 f303 	lsl.w	r3, r2, r3
 800058c:	60fb      	str	r3, [r7, #12]
        pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // Clear the bits
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	681b      	ldr	r3, [r3, #0]
 8000592:	681a      	ldr	r2, [r3, #0]
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	791b      	ldrb	r3, [r3, #4]
 8000598:	005b      	lsls	r3, r3, #1
 800059a:	2103      	movs	r1, #3
 800059c:	fa01 f303 	lsl.w	r3, r1, r3
 80005a0:	43db      	mvns	r3, r3
 80005a2:	4619      	mov	r1, r3
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	400a      	ands	r2, r1
 80005aa:	601a      	str	r2, [r3, #0]

        pGPIOHandle->pGPIOx->MODER |= temp;
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	681b      	ldr	r3, [r3, #0]
 80005b0:	6819      	ldr	r1, [r3, #0]
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	68fa      	ldr	r2, [r7, #12]
 80005b8:	430a      	orrs	r2, r1
 80005ba:	601a      	str	r2, [r3, #0]
 80005bc:	e0f3      	b.n	80007a6 <GPIO_Init+0x23e>
    }
    else {

        if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT) {
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	795b      	ldrb	r3, [r3, #5]
 80005c2:	2b04      	cmp	r3, #4
 80005c4:	d117      	bne.n	80005f6 <GPIO_Init+0x8e>

            // Configure FTSR
            EXTI->RTSR &=~ (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005c6:	4b58      	ldr	r3, [pc, #352]	@ (8000728 <GPIO_Init+0x1c0>)
 80005c8:	689b      	ldr	r3, [r3, #8]
 80005ca:	687a      	ldr	r2, [r7, #4]
 80005cc:	7912      	ldrb	r2, [r2, #4]
 80005ce:	4611      	mov	r1, r2
 80005d0:	2201      	movs	r2, #1
 80005d2:	408a      	lsls	r2, r1
 80005d4:	43d2      	mvns	r2, r2
 80005d6:	4611      	mov	r1, r2
 80005d8:	4a53      	ldr	r2, [pc, #332]	@ (8000728 <GPIO_Init+0x1c0>)
 80005da:	400b      	ands	r3, r1
 80005dc:	6093      	str	r3, [r2, #8]
            EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005de:	4b52      	ldr	r3, [pc, #328]	@ (8000728 <GPIO_Init+0x1c0>)
 80005e0:	68db      	ldr	r3, [r3, #12]
 80005e2:	687a      	ldr	r2, [r7, #4]
 80005e4:	7912      	ldrb	r2, [r2, #4]
 80005e6:	4611      	mov	r1, r2
 80005e8:	2201      	movs	r2, #1
 80005ea:	408a      	lsls	r2, r1
 80005ec:	4611      	mov	r1, r2
 80005ee:	4a4e      	ldr	r2, [pc, #312]	@ (8000728 <GPIO_Init+0x1c0>)
 80005f0:	430b      	orrs	r3, r1
 80005f2:	60d3      	str	r3, [r2, #12]
 80005f4:	e031      	b.n	800065a <GPIO_Init+0xf2>

        }
        else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT) {
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	795b      	ldrb	r3, [r3, #5]
 80005fa:	2b05      	cmp	r3, #5
 80005fc:	d117      	bne.n	800062e <GPIO_Init+0xc6>

            // Configure RTSR
            EXTI->FTSR &=~ (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005fe:	4b4a      	ldr	r3, [pc, #296]	@ (8000728 <GPIO_Init+0x1c0>)
 8000600:	68db      	ldr	r3, [r3, #12]
 8000602:	687a      	ldr	r2, [r7, #4]
 8000604:	7912      	ldrb	r2, [r2, #4]
 8000606:	4611      	mov	r1, r2
 8000608:	2201      	movs	r2, #1
 800060a:	408a      	lsls	r2, r1
 800060c:	43d2      	mvns	r2, r2
 800060e:	4611      	mov	r1, r2
 8000610:	4a45      	ldr	r2, [pc, #276]	@ (8000728 <GPIO_Init+0x1c0>)
 8000612:	400b      	ands	r3, r1
 8000614:	60d3      	str	r3, [r2, #12]
            EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000616:	4b44      	ldr	r3, [pc, #272]	@ (8000728 <GPIO_Init+0x1c0>)
 8000618:	689b      	ldr	r3, [r3, #8]
 800061a:	687a      	ldr	r2, [r7, #4]
 800061c:	7912      	ldrb	r2, [r2, #4]
 800061e:	4611      	mov	r1, r2
 8000620:	2201      	movs	r2, #1
 8000622:	408a      	lsls	r2, r1
 8000624:	4611      	mov	r1, r2
 8000626:	4a40      	ldr	r2, [pc, #256]	@ (8000728 <GPIO_Init+0x1c0>)
 8000628:	430b      	orrs	r3, r1
 800062a:	6093      	str	r3, [r2, #8]
 800062c:	e015      	b.n	800065a <GPIO_Init+0xf2>
        }
        else {

            // Configure Both  FTSR, RTSR
            EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800062e:	4b3e      	ldr	r3, [pc, #248]	@ (8000728 <GPIO_Init+0x1c0>)
 8000630:	689b      	ldr	r3, [r3, #8]
 8000632:	687a      	ldr	r2, [r7, #4]
 8000634:	7912      	ldrb	r2, [r2, #4]
 8000636:	4611      	mov	r1, r2
 8000638:	2201      	movs	r2, #1
 800063a:	408a      	lsls	r2, r1
 800063c:	4611      	mov	r1, r2
 800063e:	4a3a      	ldr	r2, [pc, #232]	@ (8000728 <GPIO_Init+0x1c0>)
 8000640:	430b      	orrs	r3, r1
 8000642:	6093      	str	r3, [r2, #8]
            EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000644:	4b38      	ldr	r3, [pc, #224]	@ (8000728 <GPIO_Init+0x1c0>)
 8000646:	68db      	ldr	r3, [r3, #12]
 8000648:	687a      	ldr	r2, [r7, #4]
 800064a:	7912      	ldrb	r2, [r2, #4]
 800064c:	4611      	mov	r1, r2
 800064e:	2201      	movs	r2, #1
 8000650:	408a      	lsls	r2, r1
 8000652:	4611      	mov	r1, r2
 8000654:	4a34      	ldr	r2, [pc, #208]	@ (8000728 <GPIO_Init+0x1c0>)
 8000656:	430b      	orrs	r3, r1
 8000658:	60d3      	str	r3, [r2, #12]
        }

        EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Unmask the interrupt for the pin
 800065a:	4b33      	ldr	r3, [pc, #204]	@ (8000728 <GPIO_Init+0x1c0>)
 800065c:	681b      	ldr	r3, [r3, #0]
 800065e:	687a      	ldr	r2, [r7, #4]
 8000660:	7912      	ldrb	r2, [r2, #4]
 8000662:	4611      	mov	r1, r2
 8000664:	2201      	movs	r2, #1
 8000666:	408a      	lsls	r2, r1
 8000668:	4611      	mov	r1, r2
 800066a:	4a2f      	ldr	r2, [pc, #188]	@ (8000728 <GPIO_Init+0x1c0>)
 800066c:	430b      	orrs	r3, r1
 800066e:	6013      	str	r3, [r2, #0]

        uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4; // Determine the EXTI line register (0-3)
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	791b      	ldrb	r3, [r3, #4]
 8000674:	089b      	lsrs	r3, r3, #2
 8000676:	72fb      	strb	r3, [r7, #11]
        uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4; // Determine the bit position within the register
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	791b      	ldrb	r3, [r3, #4]
 800067c:	f003 0303 	and.w	r3, r3, #3
 8000680:	72bb      	strb	r3, [r7, #10]
        SYSCFG_PCLK_EN();
 8000682:	4b2a      	ldr	r3, [pc, #168]	@ (800072c <GPIO_Init+0x1c4>)
 8000684:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000686:	4a29      	ldr	r2, [pc, #164]	@ (800072c <GPIO_Init+0x1c4>)
 8000688:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800068c:	6453      	str	r3, [r2, #68]	@ 0x44
        uint8_t port_code = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800068e:	687b      	ldr	r3, [r7, #4]
 8000690:	681b      	ldr	r3, [r3, #0]
 8000692:	4a27      	ldr	r2, [pc, #156]	@ (8000730 <GPIO_Init+0x1c8>)
 8000694:	4293      	cmp	r3, r2
 8000696:	d061      	beq.n	800075c <GPIO_Init+0x1f4>
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	4a25      	ldr	r2, [pc, #148]	@ (8000734 <GPIO_Init+0x1cc>)
 800069e:	4293      	cmp	r3, r2
 80006a0:	d040      	beq.n	8000724 <GPIO_Init+0x1bc>
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	4a24      	ldr	r2, [pc, #144]	@ (8000738 <GPIO_Init+0x1d0>)
 80006a8:	4293      	cmp	r3, r2
 80006aa:	d039      	beq.n	8000720 <GPIO_Init+0x1b8>
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	4a22      	ldr	r2, [pc, #136]	@ (800073c <GPIO_Init+0x1d4>)
 80006b2:	4293      	cmp	r3, r2
 80006b4:	d032      	beq.n	800071c <GPIO_Init+0x1b4>
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	681b      	ldr	r3, [r3, #0]
 80006ba:	4a21      	ldr	r2, [pc, #132]	@ (8000740 <GPIO_Init+0x1d8>)
 80006bc:	4293      	cmp	r3, r2
 80006be:	d02b      	beq.n	8000718 <GPIO_Init+0x1b0>
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	4a1f      	ldr	r2, [pc, #124]	@ (8000744 <GPIO_Init+0x1dc>)
 80006c6:	4293      	cmp	r3, r2
 80006c8:	d024      	beq.n	8000714 <GPIO_Init+0x1ac>
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	681b      	ldr	r3, [r3, #0]
 80006ce:	4a1e      	ldr	r2, [pc, #120]	@ (8000748 <GPIO_Init+0x1e0>)
 80006d0:	4293      	cmp	r3, r2
 80006d2:	d01d      	beq.n	8000710 <GPIO_Init+0x1a8>
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	681b      	ldr	r3, [r3, #0]
 80006d8:	4a1c      	ldr	r2, [pc, #112]	@ (800074c <GPIO_Init+0x1e4>)
 80006da:	4293      	cmp	r3, r2
 80006dc:	d016      	beq.n	800070c <GPIO_Init+0x1a4>
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	681b      	ldr	r3, [r3, #0]
 80006e2:	4a1b      	ldr	r2, [pc, #108]	@ (8000750 <GPIO_Init+0x1e8>)
 80006e4:	4293      	cmp	r3, r2
 80006e6:	d00f      	beq.n	8000708 <GPIO_Init+0x1a0>
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	4a19      	ldr	r2, [pc, #100]	@ (8000754 <GPIO_Init+0x1ec>)
 80006ee:	4293      	cmp	r3, r2
 80006f0:	d008      	beq.n	8000704 <GPIO_Init+0x19c>
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	4a18      	ldr	r2, [pc, #96]	@ (8000758 <GPIO_Init+0x1f0>)
 80006f8:	4293      	cmp	r3, r2
 80006fa:	d101      	bne.n	8000700 <GPIO_Init+0x198>
 80006fc:	230a      	movs	r3, #10
 80006fe:	e02e      	b.n	800075e <GPIO_Init+0x1f6>
 8000700:	2300      	movs	r3, #0
 8000702:	e02c      	b.n	800075e <GPIO_Init+0x1f6>
 8000704:	2309      	movs	r3, #9
 8000706:	e02a      	b.n	800075e <GPIO_Init+0x1f6>
 8000708:	2308      	movs	r3, #8
 800070a:	e028      	b.n	800075e <GPIO_Init+0x1f6>
 800070c:	2307      	movs	r3, #7
 800070e:	e026      	b.n	800075e <GPIO_Init+0x1f6>
 8000710:	2306      	movs	r3, #6
 8000712:	e024      	b.n	800075e <GPIO_Init+0x1f6>
 8000714:	2305      	movs	r3, #5
 8000716:	e022      	b.n	800075e <GPIO_Init+0x1f6>
 8000718:	2304      	movs	r3, #4
 800071a:	e020      	b.n	800075e <GPIO_Init+0x1f6>
 800071c:	2303      	movs	r3, #3
 800071e:	e01e      	b.n	800075e <GPIO_Init+0x1f6>
 8000720:	2302      	movs	r3, #2
 8000722:	e01c      	b.n	800075e <GPIO_Init+0x1f6>
 8000724:	2301      	movs	r3, #1
 8000726:	e01a      	b.n	800075e <GPIO_Init+0x1f6>
 8000728:	40013c00 	.word	0x40013c00
 800072c:	40023800 	.word	0x40023800
 8000730:	40020000 	.word	0x40020000
 8000734:	40020400 	.word	0x40020400
 8000738:	40020800 	.word	0x40020800
 800073c:	40020c00 	.word	0x40020c00
 8000740:	40021000 	.word	0x40021000
 8000744:	40021400 	.word	0x40021400
 8000748:	40021800 	.word	0x40021800
 800074c:	40021c00 	.word	0x40021c00
 8000750:	40022000 	.word	0x40022000
 8000754:	40022400 	.word	0x40022400
 8000758:	40022800 	.word	0x40022800
 800075c:	2300      	movs	r3, #0
 800075e:	727b      	strb	r3, [r7, #9]
        SYSCFG->EXTICR[temp1] &= ~(0xF << (4 * temp2)); // Clear bits
 8000760:	4a6d      	ldr	r2, [pc, #436]	@ (8000918 <GPIO_Init+0x3b0>)
 8000762:	7afb      	ldrb	r3, [r7, #11]
 8000764:	3302      	adds	r3, #2
 8000766:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800076a:	7abb      	ldrb	r3, [r7, #10]
 800076c:	009b      	lsls	r3, r3, #2
 800076e:	210f      	movs	r1, #15
 8000770:	fa01 f303 	lsl.w	r3, r1, r3
 8000774:	43db      	mvns	r3, r3
 8000776:	4618      	mov	r0, r3
 8000778:	4967      	ldr	r1, [pc, #412]	@ (8000918 <GPIO_Init+0x3b0>)
 800077a:	7afb      	ldrb	r3, [r7, #11]
 800077c:	4002      	ands	r2, r0
 800077e:	3302      	adds	r3, #2
 8000780:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        SYSCFG->EXTICR[temp1] |= port_code << (4 *temp2);
 8000784:	4a64      	ldr	r2, [pc, #400]	@ (8000918 <GPIO_Init+0x3b0>)
 8000786:	7afb      	ldrb	r3, [r7, #11]
 8000788:	3302      	adds	r3, #2
 800078a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800078e:	7a79      	ldrb	r1, [r7, #9]
 8000790:	7abb      	ldrb	r3, [r7, #10]
 8000792:	009b      	lsls	r3, r3, #2
 8000794:	fa01 f303 	lsl.w	r3, r1, r3
 8000798:	4618      	mov	r0, r3
 800079a:	495f      	ldr	r1, [pc, #380]	@ (8000918 <GPIO_Init+0x3b0>)
 800079c:	7afb      	ldrb	r3, [r7, #11]
 800079e:	4302      	orrs	r2, r0
 80007a0:	3302      	adds	r3, #2
 80007a2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

    }

    temp = 0;
 80007a6:	2300      	movs	r3, #0
 80007a8:	60fb      	str	r3, [r7, #12]

    temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80007aa:	687b      	ldr	r3, [r7, #4]
 80007ac:	7a1b      	ldrb	r3, [r3, #8]
 80007ae:	461a      	mov	r2, r3
 80007b0:	687b      	ldr	r3, [r7, #4]
 80007b2:	791b      	ldrb	r3, [r3, #4]
 80007b4:	fa02 f303 	lsl.w	r3, r2, r3
 80007b8:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // Clear the bit
 80007ba:	687b      	ldr	r3, [r7, #4]
 80007bc:	681b      	ldr	r3, [r3, #0]
 80007be:	685a      	ldr	r2, [r3, #4]
 80007c0:	687b      	ldr	r3, [r7, #4]
 80007c2:	791b      	ldrb	r3, [r3, #4]
 80007c4:	4619      	mov	r1, r3
 80007c6:	2301      	movs	r3, #1
 80007c8:	408b      	lsls	r3, r1
 80007ca:	43db      	mvns	r3, r3
 80007cc:	4619      	mov	r1, r3
 80007ce:	687b      	ldr	r3, [r7, #4]
 80007d0:	681b      	ldr	r3, [r3, #0]
 80007d2:	400a      	ands	r2, r1
 80007d4:	605a      	str	r2, [r3, #4]
    pGPIOHandle->pGPIOx->OTYPER |= temp;
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	681b      	ldr	r3, [r3, #0]
 80007da:	6859      	ldr	r1, [r3, #4]
 80007dc:	687b      	ldr	r3, [r7, #4]
 80007de:	681b      	ldr	r3, [r3, #0]
 80007e0:	68fa      	ldr	r2, [r7, #12]
 80007e2:	430a      	orrs	r2, r1
 80007e4:	605a      	str	r2, [r3, #4]

    temp = 0;
 80007e6:	2300      	movs	r3, #0
 80007e8:	60fb      	str	r3, [r7, #12]

    temp =pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80007ea:	687b      	ldr	r3, [r7, #4]
 80007ec:	799b      	ldrb	r3, [r3, #6]
 80007ee:	461a      	mov	r2, r3
 80007f0:	687b      	ldr	r3, [r7, #4]
 80007f2:	791b      	ldrb	r3, [r3, #4]
 80007f4:	005b      	lsls	r3, r3, #1
 80007f6:	fa02 f303 	lsl.w	r3, r2, r3
 80007fa:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // Clear the bits
 80007fc:	687b      	ldr	r3, [r7, #4]
 80007fe:	681b      	ldr	r3, [r3, #0]
 8000800:	689a      	ldr	r2, [r3, #8]
 8000802:	687b      	ldr	r3, [r7, #4]
 8000804:	791b      	ldrb	r3, [r3, #4]
 8000806:	005b      	lsls	r3, r3, #1
 8000808:	2103      	movs	r1, #3
 800080a:	fa01 f303 	lsl.w	r3, r1, r3
 800080e:	43db      	mvns	r3, r3
 8000810:	4619      	mov	r1, r3
 8000812:	687b      	ldr	r3, [r7, #4]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	400a      	ands	r2, r1
 8000818:	609a      	str	r2, [r3, #8]
    pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800081a:	687b      	ldr	r3, [r7, #4]
 800081c:	681b      	ldr	r3, [r3, #0]
 800081e:	6899      	ldr	r1, [r3, #8]
 8000820:	687b      	ldr	r3, [r7, #4]
 8000822:	681b      	ldr	r3, [r3, #0]
 8000824:	68fa      	ldr	r2, [r7, #12]
 8000826:	430a      	orrs	r2, r1
 8000828:	609a      	str	r2, [r3, #8]

    temp = 0;
 800082a:	2300      	movs	r3, #0
 800082c:	60fb      	str	r3, [r7, #12]

    temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800082e:	687b      	ldr	r3, [r7, #4]
 8000830:	79db      	ldrb	r3, [r3, #7]
 8000832:	461a      	mov	r2, r3
 8000834:	687b      	ldr	r3, [r7, #4]
 8000836:	791b      	ldrb	r3, [r3, #4]
 8000838:	005b      	lsls	r3, r3, #1
 800083a:	fa02 f303 	lsl.w	r3, r2, r3
 800083e:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // Clear the bits
 8000840:	687b      	ldr	r3, [r7, #4]
 8000842:	681b      	ldr	r3, [r3, #0]
 8000844:	68da      	ldr	r2, [r3, #12]
 8000846:	687b      	ldr	r3, [r7, #4]
 8000848:	791b      	ldrb	r3, [r3, #4]
 800084a:	005b      	lsls	r3, r3, #1
 800084c:	2103      	movs	r1, #3
 800084e:	fa01 f303 	lsl.w	r3, r1, r3
 8000852:	43db      	mvns	r3, r3
 8000854:	4619      	mov	r1, r3
 8000856:	687b      	ldr	r3, [r7, #4]
 8000858:	681b      	ldr	r3, [r3, #0]
 800085a:	400a      	ands	r2, r1
 800085c:	60da      	str	r2, [r3, #12]
    pGPIOHandle->pGPIOx->PUPDR |= temp;
 800085e:	687b      	ldr	r3, [r7, #4]
 8000860:	681b      	ldr	r3, [r3, #0]
 8000862:	68d9      	ldr	r1, [r3, #12]
 8000864:	687b      	ldr	r3, [r7, #4]
 8000866:	681b      	ldr	r3, [r3, #0]
 8000868:	68fa      	ldr	r2, [r7, #12]
 800086a:	430a      	orrs	r2, r1
 800086c:	60da      	str	r2, [r3, #12]

    temp = 0;
 800086e:	2300      	movs	r3, #0
 8000870:	60fb      	str	r3, [r7, #12]
    if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALT) {
 8000872:	687b      	ldr	r3, [r7, #4]
 8000874:	795b      	ldrb	r3, [r3, #5]
 8000876:	2b02      	cmp	r3, #2
 8000878:	d148      	bne.n	800090c <GPIO_Init+0x3a4>
        if ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) < 8) {
 800087a:	687b      	ldr	r3, [r7, #4]
 800087c:	791b      	ldrb	r3, [r3, #4]
 800087e:	2b07      	cmp	r3, #7
 8000880:	d822      	bhi.n	80008c8 <GPIO_Init+0x360>
            temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000882:	687b      	ldr	r3, [r7, #4]
 8000884:	7a5b      	ldrb	r3, [r3, #9]
 8000886:	461a      	mov	r2, r3
 8000888:	687b      	ldr	r3, [r7, #4]
 800088a:	791b      	ldrb	r3, [r3, #4]
 800088c:	009b      	lsls	r3, r3, #2
 800088e:	fa02 f303 	lsl.w	r3, r2, r3
 8000892:	60fb      	str	r3, [r7, #12]
            pGPIOHandle->pGPIOx->AFR[0] &= ~(0xF << (4 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // Clear the bits
 8000894:	687b      	ldr	r3, [r7, #4]
 8000896:	681b      	ldr	r3, [r3, #0]
 8000898:	6a1a      	ldr	r2, [r3, #32]
 800089a:	687b      	ldr	r3, [r7, #4]
 800089c:	791b      	ldrb	r3, [r3, #4]
 800089e:	009b      	lsls	r3, r3, #2
 80008a0:	210f      	movs	r1, #15
 80008a2:	fa01 f303 	lsl.w	r3, r1, r3
 80008a6:	43db      	mvns	r3, r3
 80008a8:	4619      	mov	r1, r3
 80008aa:	687b      	ldr	r3, [r7, #4]
 80008ac:	681b      	ldr	r3, [r3, #0]
 80008ae:	400a      	ands	r2, r1
 80008b0:	621a      	str	r2, [r3, #32]
            pGPIOHandle->pGPIOx->AFR[0] |= temp;
 80008b2:	687b      	ldr	r3, [r7, #4]
 80008b4:	681b      	ldr	r3, [r3, #0]
 80008b6:	6a19      	ldr	r1, [r3, #32]
 80008b8:	687b      	ldr	r3, [r7, #4]
 80008ba:	681b      	ldr	r3, [r3, #0]
 80008bc:	68fa      	ldr	r2, [r7, #12]
 80008be:	430a      	orrs	r2, r1
 80008c0:	621a      	str	r2, [r3, #32]
            temp = 0;
 80008c2:	2300      	movs	r3, #0
 80008c4:	60fb      	str	r3, [r7, #12]
            temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber - 8));
            pGPIOHandle->pGPIOx->AFR[1] &= ~(0xF << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber - 8))); // Clear the bits
            pGPIOHandle->pGPIOx->AFR[1] |= temp;
        }
    }
}
 80008c6:	e021      	b.n	800090c <GPIO_Init+0x3a4>
            temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber - 8));
 80008c8:	687b      	ldr	r3, [r7, #4]
 80008ca:	7a5b      	ldrb	r3, [r3, #9]
 80008cc:	461a      	mov	r2, r3
 80008ce:	687b      	ldr	r3, [r7, #4]
 80008d0:	791b      	ldrb	r3, [r3, #4]
 80008d2:	3b08      	subs	r3, #8
 80008d4:	009b      	lsls	r3, r3, #2
 80008d6:	fa02 f303 	lsl.w	r3, r2, r3
 80008da:	60fb      	str	r3, [r7, #12]
            pGPIOHandle->pGPIOx->AFR[1] &= ~(0xF << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber - 8))); // Clear the bits
 80008dc:	687b      	ldr	r3, [r7, #4]
 80008de:	681b      	ldr	r3, [r3, #0]
 80008e0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80008e2:	687b      	ldr	r3, [r7, #4]
 80008e4:	791b      	ldrb	r3, [r3, #4]
 80008e6:	3b08      	subs	r3, #8
 80008e8:	009b      	lsls	r3, r3, #2
 80008ea:	210f      	movs	r1, #15
 80008ec:	fa01 f303 	lsl.w	r3, r1, r3
 80008f0:	43db      	mvns	r3, r3
 80008f2:	4619      	mov	r1, r3
 80008f4:	687b      	ldr	r3, [r7, #4]
 80008f6:	681b      	ldr	r3, [r3, #0]
 80008f8:	400a      	ands	r2, r1
 80008fa:	625a      	str	r2, [r3, #36]	@ 0x24
            pGPIOHandle->pGPIOx->AFR[1] |= temp;
 80008fc:	687b      	ldr	r3, [r7, #4]
 80008fe:	681b      	ldr	r3, [r3, #0]
 8000900:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8000902:	687b      	ldr	r3, [r7, #4]
 8000904:	681b      	ldr	r3, [r3, #0]
 8000906:	68fa      	ldr	r2, [r7, #12]
 8000908:	430a      	orrs	r2, r1
 800090a:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800090c:	bf00      	nop
 800090e:	3714      	adds	r7, #20
 8000910:	46bd      	mov	sp, r7
 8000912:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000916:	4770      	bx	lr
 8000918:	40013800 	.word	0x40013800

0800091c <GPIO_ToggleOutputPin>:
 * @brief  Toggles the state of a specific GPIO output pin.
 * @param  pGPIOx: Pointer to the GPIO port base address.
 * @param  PinNumber: Pin number to toggle.
 * @retval None
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber) {
 800091c:	b480      	push	{r7}
 800091e:	b083      	sub	sp, #12
 8000920:	af00      	add	r7, sp, #0
 8000922:	6078      	str	r0, [r7, #4]
 8000924:	460b      	mov	r3, r1
 8000926:	70fb      	strb	r3, [r7, #3]

    pGPIOx->ODR ^= (1 << PinNumber);
 8000928:	687b      	ldr	r3, [r7, #4]
 800092a:	695b      	ldr	r3, [r3, #20]
 800092c:	78fa      	ldrb	r2, [r7, #3]
 800092e:	2101      	movs	r1, #1
 8000930:	fa01 f202 	lsl.w	r2, r1, r2
 8000934:	405a      	eors	r2, r3
 8000936:	687b      	ldr	r3, [r7, #4]
 8000938:	615a      	str	r2, [r3, #20]

}
 800093a:	bf00      	nop
 800093c:	370c      	adds	r7, #12
 800093e:	46bd      	mov	sp, r7
 8000940:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000944:	4770      	bx	lr
	...

08000948 <GPIO_IRQInterruptConfig>:
 * @param  IRQNumber: IRQ number of the GPIO pin.
 * @param  IRQPriority: Priority of the interrupt.
 * @param  EnorDi: ENABLE to enable the interrupt, DISABLE to disable it.
 * @retval None
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber,uint8_t EnorDi) {
 8000948:	b480      	push	{r7}
 800094a:	b083      	sub	sp, #12
 800094c:	af00      	add	r7, sp, #0
 800094e:	4603      	mov	r3, r0
 8000950:	460a      	mov	r2, r1
 8000952:	71fb      	strb	r3, [r7, #7]
 8000954:	4613      	mov	r3, r2
 8000956:	71bb      	strb	r3, [r7, #6]

    if(EnorDi == ENABLE) {
 8000958:	79bb      	ldrb	r3, [r7, #6]
 800095a:	2b01      	cmp	r3, #1
 800095c:	d133      	bne.n	80009c6 <GPIO_IRQInterruptConfig+0x7e>

        if(IRQNumber <=31) {
 800095e:	79fb      	ldrb	r3, [r7, #7]
 8000960:	2b1f      	cmp	r3, #31
 8000962:	d80a      	bhi.n	800097a <GPIO_IRQInterruptConfig+0x32>

            *NVIC_ISER0 |= (1 << IRQNumber);
 8000964:	4b35      	ldr	r3, [pc, #212]	@ (8000a3c <GPIO_IRQInterruptConfig+0xf4>)
 8000966:	681b      	ldr	r3, [r3, #0]
 8000968:	79fa      	ldrb	r2, [r7, #7]
 800096a:	2101      	movs	r1, #1
 800096c:	fa01 f202 	lsl.w	r2, r1, r2
 8000970:	4611      	mov	r1, r2
 8000972:	4a32      	ldr	r2, [pc, #200]	@ (8000a3c <GPIO_IRQInterruptConfig+0xf4>)
 8000974:	430b      	orrs	r3, r1
 8000976:	6013      	str	r3, [r2, #0]
        }
    }

    

}
 8000978:	e059      	b.n	8000a2e <GPIO_IRQInterruptConfig+0xe6>
        else if(IRQNumber >= 32 && IRQNumber <64) {
 800097a:	79fb      	ldrb	r3, [r7, #7]
 800097c:	2b1f      	cmp	r3, #31
 800097e:	d90f      	bls.n	80009a0 <GPIO_IRQInterruptConfig+0x58>
 8000980:	79fb      	ldrb	r3, [r7, #7]
 8000982:	2b3f      	cmp	r3, #63	@ 0x3f
 8000984:	d80c      	bhi.n	80009a0 <GPIO_IRQInterruptConfig+0x58>
            *NVIC_ISER1 |= (1 << (IRQNumber % 32));
 8000986:	4b2e      	ldr	r3, [pc, #184]	@ (8000a40 <GPIO_IRQInterruptConfig+0xf8>)
 8000988:	681b      	ldr	r3, [r3, #0]
 800098a:	79fa      	ldrb	r2, [r7, #7]
 800098c:	f002 021f 	and.w	r2, r2, #31
 8000990:	2101      	movs	r1, #1
 8000992:	fa01 f202 	lsl.w	r2, r1, r2
 8000996:	4611      	mov	r1, r2
 8000998:	4a29      	ldr	r2, [pc, #164]	@ (8000a40 <GPIO_IRQInterruptConfig+0xf8>)
 800099a:	430b      	orrs	r3, r1
 800099c:	6013      	str	r3, [r2, #0]
 800099e:	e046      	b.n	8000a2e <GPIO_IRQInterruptConfig+0xe6>
        else if(IRQNumber >= 64 && IRQNumber <96) {
 80009a0:	79fb      	ldrb	r3, [r7, #7]
 80009a2:	2b3f      	cmp	r3, #63	@ 0x3f
 80009a4:	d943      	bls.n	8000a2e <GPIO_IRQInterruptConfig+0xe6>
 80009a6:	79fb      	ldrb	r3, [r7, #7]
 80009a8:	2b5f      	cmp	r3, #95	@ 0x5f
 80009aa:	d840      	bhi.n	8000a2e <GPIO_IRQInterruptConfig+0xe6>
            *NVIC_ISER2 |= (1 << (IRQNumber % 32));
 80009ac:	4b25      	ldr	r3, [pc, #148]	@ (8000a44 <GPIO_IRQInterruptConfig+0xfc>)
 80009ae:	681b      	ldr	r3, [r3, #0]
 80009b0:	79fa      	ldrb	r2, [r7, #7]
 80009b2:	f002 021f 	and.w	r2, r2, #31
 80009b6:	2101      	movs	r1, #1
 80009b8:	fa01 f202 	lsl.w	r2, r1, r2
 80009bc:	4611      	mov	r1, r2
 80009be:	4a21      	ldr	r2, [pc, #132]	@ (8000a44 <GPIO_IRQInterruptConfig+0xfc>)
 80009c0:	430b      	orrs	r3, r1
 80009c2:	6013      	str	r3, [r2, #0]
}
 80009c4:	e033      	b.n	8000a2e <GPIO_IRQInterruptConfig+0xe6>
        if(IRQNumber <=31) {
 80009c6:	79fb      	ldrb	r3, [r7, #7]
 80009c8:	2b1f      	cmp	r3, #31
 80009ca:	d80a      	bhi.n	80009e2 <GPIO_IRQInterruptConfig+0x9a>
            *NVIC_ICER0 |= (1 << IRQNumber);
 80009cc:	4b1e      	ldr	r3, [pc, #120]	@ (8000a48 <GPIO_IRQInterruptConfig+0x100>)
 80009ce:	681b      	ldr	r3, [r3, #0]
 80009d0:	79fa      	ldrb	r2, [r7, #7]
 80009d2:	2101      	movs	r1, #1
 80009d4:	fa01 f202 	lsl.w	r2, r1, r2
 80009d8:	4611      	mov	r1, r2
 80009da:	4a1b      	ldr	r2, [pc, #108]	@ (8000a48 <GPIO_IRQInterruptConfig+0x100>)
 80009dc:	430b      	orrs	r3, r1
 80009de:	6013      	str	r3, [r2, #0]
}
 80009e0:	e025      	b.n	8000a2e <GPIO_IRQInterruptConfig+0xe6>
        else if(IRQNumber >= 32 && IRQNumber <64) {
 80009e2:	79fb      	ldrb	r3, [r7, #7]
 80009e4:	2b1f      	cmp	r3, #31
 80009e6:	d90f      	bls.n	8000a08 <GPIO_IRQInterruptConfig+0xc0>
 80009e8:	79fb      	ldrb	r3, [r7, #7]
 80009ea:	2b3f      	cmp	r3, #63	@ 0x3f
 80009ec:	d80c      	bhi.n	8000a08 <GPIO_IRQInterruptConfig+0xc0>
            *NVIC_ICER1 |= (1 << (IRQNumber % 32));
 80009ee:	4b17      	ldr	r3, [pc, #92]	@ (8000a4c <GPIO_IRQInterruptConfig+0x104>)
 80009f0:	681b      	ldr	r3, [r3, #0]
 80009f2:	79fa      	ldrb	r2, [r7, #7]
 80009f4:	f002 021f 	and.w	r2, r2, #31
 80009f8:	2101      	movs	r1, #1
 80009fa:	fa01 f202 	lsl.w	r2, r1, r2
 80009fe:	4611      	mov	r1, r2
 8000a00:	4a12      	ldr	r2, [pc, #72]	@ (8000a4c <GPIO_IRQInterruptConfig+0x104>)
 8000a02:	430b      	orrs	r3, r1
 8000a04:	6013      	str	r3, [r2, #0]
 8000a06:	e012      	b.n	8000a2e <GPIO_IRQInterruptConfig+0xe6>
        else if(IRQNumber >= 64 && IRQNumber <96) {
 8000a08:	79fb      	ldrb	r3, [r7, #7]
 8000a0a:	2b3f      	cmp	r3, #63	@ 0x3f
 8000a0c:	d90f      	bls.n	8000a2e <GPIO_IRQInterruptConfig+0xe6>
 8000a0e:	79fb      	ldrb	r3, [r7, #7]
 8000a10:	2b5f      	cmp	r3, #95	@ 0x5f
 8000a12:	d80c      	bhi.n	8000a2e <GPIO_IRQInterruptConfig+0xe6>
            *NVIC_ICER2 |= (1 << (IRQNumber % 32));
 8000a14:	4b0e      	ldr	r3, [pc, #56]	@ (8000a50 <GPIO_IRQInterruptConfig+0x108>)
 8000a16:	681b      	ldr	r3, [r3, #0]
 8000a18:	79fa      	ldrb	r2, [r7, #7]
 8000a1a:	f002 021f 	and.w	r2, r2, #31
 8000a1e:	2101      	movs	r1, #1
 8000a20:	fa01 f202 	lsl.w	r2, r1, r2
 8000a24:	4611      	mov	r1, r2
 8000a26:	4a0a      	ldr	r2, [pc, #40]	@ (8000a50 <GPIO_IRQInterruptConfig+0x108>)
 8000a28:	430b      	orrs	r3, r1
 8000a2a:	6013      	str	r3, [r2, #0]
}
 8000a2c:	e7ff      	b.n	8000a2e <GPIO_IRQInterruptConfig+0xe6>
 8000a2e:	bf00      	nop
 8000a30:	370c      	adds	r7, #12
 8000a32:	46bd      	mov	sp, r7
 8000a34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a38:	4770      	bx	lr
 8000a3a:	bf00      	nop
 8000a3c:	e000e100 	.word	0xe000e100
 8000a40:	e000e104 	.word	0xe000e104
 8000a44:	e000e108 	.word	0xe000e108
 8000a48:	e000e180 	.word	0xe000e180
 8000a4c:	e000e184 	.word	0xe000e184
 8000a50:	e000e188 	.word	0xe000e188

08000a54 <GPIO_IRQPriorityConfig>:

void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority) {
 8000a54:	b480      	push	{r7}
 8000a56:	b085      	sub	sp, #20
 8000a58:	af00      	add	r7, sp, #0
 8000a5a:	4603      	mov	r3, r0
 8000a5c:	6039      	str	r1, [r7, #0]
 8000a5e:	71fb      	strb	r3, [r7, #7]

    uint8_t iprx = IRQNumber / 4 ; // Determine the interrupt priority register (IPRx Register)
 8000a60:	79fb      	ldrb	r3, [r7, #7]
 8000a62:	089b      	lsrs	r3, r3, #2
 8000a64:	73fb      	strb	r3, [r7, #15]
    uint8_t iprx_section = IRQNumber % 4 ; // Determine the section within the register
 8000a66:	79fb      	ldrb	r3, [r7, #7]
 8000a68:	f003 0303 	and.w	r3, r3, #3
 8000a6c:	73bb      	strb	r3, [r7, #14]
    uint8_t shift_amount = (8 *iprx_section) + (8-NO_PRIORITY_BITS_IMPLEMENTED); // Calculate the shift amount for the priority bits;
 8000a6e:	7bbb      	ldrb	r3, [r7, #14]
 8000a70:	00db      	lsls	r3, r3, #3
 8000a72:	b2db      	uxtb	r3, r3
 8000a74:	3304      	adds	r3, #4
 8000a76:	737b      	strb	r3, [r7, #13]

    *(NVIC_PR_BASE_ADDR + iprx) |= IRQPriority << shift_amount; // Set the priority for the interrupt
 8000a78:	7bfb      	ldrb	r3, [r7, #15]
 8000a7a:	009a      	lsls	r2, r3, #2
 8000a7c:	4b08      	ldr	r3, [pc, #32]	@ (8000aa0 <GPIO_IRQPriorityConfig+0x4c>)
 8000a7e:	4413      	add	r3, r2
 8000a80:	6819      	ldr	r1, [r3, #0]
 8000a82:	7b7b      	ldrb	r3, [r7, #13]
 8000a84:	683a      	ldr	r2, [r7, #0]
 8000a86:	409a      	lsls	r2, r3
 8000a88:	7bfb      	ldrb	r3, [r7, #15]
 8000a8a:	0098      	lsls	r0, r3, #2
 8000a8c:	4b04      	ldr	r3, [pc, #16]	@ (8000aa0 <GPIO_IRQPriorityConfig+0x4c>)
 8000a8e:	4403      	add	r3, r0
 8000a90:	430a      	orrs	r2, r1
 8000a92:	601a      	str	r2, [r3, #0]


}
 8000a94:	bf00      	nop
 8000a96:	3714      	adds	r7, #20
 8000a98:	46bd      	mov	sp, r7
 8000a9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a9e:	4770      	bx	lr
 8000aa0:	e000e400 	.word	0xe000e400

08000aa4 <GPIO_IRQHandler>:
/**
 * @brief  Handles the interrupt for a specific GPIO pin.
 * @param  PinNumber: Pin number that triggered the interrupt.
 * @retval None
 */
void GPIO_IRQHandler(uint8_t PinNumber) {
 8000aa4:	b480      	push	{r7}
 8000aa6:	b083      	sub	sp, #12
 8000aa8:	af00      	add	r7, sp, #0
 8000aaa:	4603      	mov	r3, r0
 8000aac:	71fb      	strb	r3, [r7, #7]

    if(EXTI->PR & (1 << PinNumber)) { // Check if the interrupt is pending for the pin
 8000aae:	4b0c      	ldr	r3, [pc, #48]	@ (8000ae0 <GPIO_IRQHandler+0x3c>)
 8000ab0:	695b      	ldr	r3, [r3, #20]
 8000ab2:	79fa      	ldrb	r2, [r7, #7]
 8000ab4:	2101      	movs	r1, #1
 8000ab6:	fa01 f202 	lsl.w	r2, r1, r2
 8000aba:	4013      	ands	r3, r2
 8000abc:	2b00      	cmp	r3, #0
 8000abe:	d009      	beq.n	8000ad4 <GPIO_IRQHandler+0x30>
        EXTI->PR |= (1 << PinNumber); // Clear the pending interrupt flag
 8000ac0:	4b07      	ldr	r3, [pc, #28]	@ (8000ae0 <GPIO_IRQHandler+0x3c>)
 8000ac2:	695b      	ldr	r3, [r3, #20]
 8000ac4:	79fa      	ldrb	r2, [r7, #7]
 8000ac6:	2101      	movs	r1, #1
 8000ac8:	fa01 f202 	lsl.w	r2, r1, r2
 8000acc:	4611      	mov	r1, r2
 8000ace:	4a04      	ldr	r2, [pc, #16]	@ (8000ae0 <GPIO_IRQHandler+0x3c>)
 8000ad0:	430b      	orrs	r3, r1
 8000ad2:	6153      	str	r3, [r2, #20]
        // Call the user-defined ISR function for the pin
        // This function should be defined by the user to handle the interrupt
        // Example: User_GPIO_IRQHandling(PinNumber);
    }
}
 8000ad4:	bf00      	nop
 8000ad6:	370c      	adds	r7, #12
 8000ad8:	46bd      	mov	sp, r7
 8000ada:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ade:	4770      	bx	lr
 8000ae0:	40013c00 	.word	0x40013c00

08000ae4 <memset>:
 8000ae4:	4402      	add	r2, r0
 8000ae6:	4603      	mov	r3, r0
 8000ae8:	4293      	cmp	r3, r2
 8000aea:	d100      	bne.n	8000aee <memset+0xa>
 8000aec:	4770      	bx	lr
 8000aee:	f803 1b01 	strb.w	r1, [r3], #1
 8000af2:	e7f9      	b.n	8000ae8 <memset+0x4>

08000af4 <__libc_init_array>:
 8000af4:	b570      	push	{r4, r5, r6, lr}
 8000af6:	4d0d      	ldr	r5, [pc, #52]	@ (8000b2c <__libc_init_array+0x38>)
 8000af8:	4c0d      	ldr	r4, [pc, #52]	@ (8000b30 <__libc_init_array+0x3c>)
 8000afa:	1b64      	subs	r4, r4, r5
 8000afc:	10a4      	asrs	r4, r4, #2
 8000afe:	2600      	movs	r6, #0
 8000b00:	42a6      	cmp	r6, r4
 8000b02:	d109      	bne.n	8000b18 <__libc_init_array+0x24>
 8000b04:	4d0b      	ldr	r5, [pc, #44]	@ (8000b34 <__libc_init_array+0x40>)
 8000b06:	4c0c      	ldr	r4, [pc, #48]	@ (8000b38 <__libc_init_array+0x44>)
 8000b08:	f000 f818 	bl	8000b3c <_init>
 8000b0c:	1b64      	subs	r4, r4, r5
 8000b0e:	10a4      	asrs	r4, r4, #2
 8000b10:	2600      	movs	r6, #0
 8000b12:	42a6      	cmp	r6, r4
 8000b14:	d105      	bne.n	8000b22 <__libc_init_array+0x2e>
 8000b16:	bd70      	pop	{r4, r5, r6, pc}
 8000b18:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b1c:	4798      	blx	r3
 8000b1e:	3601      	adds	r6, #1
 8000b20:	e7ee      	b.n	8000b00 <__libc_init_array+0xc>
 8000b22:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b26:	4798      	blx	r3
 8000b28:	3601      	adds	r6, #1
 8000b2a:	e7f2      	b.n	8000b12 <__libc_init_array+0x1e>
 8000b2c:	08000b54 	.word	0x08000b54
 8000b30:	08000b54 	.word	0x08000b54
 8000b34:	08000b54 	.word	0x08000b54
 8000b38:	08000b58 	.word	0x08000b58

08000b3c <_init>:
 8000b3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b3e:	bf00      	nop
 8000b40:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b42:	bc08      	pop	{r3}
 8000b44:	469e      	mov	lr, r3
 8000b46:	4770      	bx	lr

08000b48 <_fini>:
 8000b48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b4a:	bf00      	nop
 8000b4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b4e:	bc08      	pop	{r3}
 8000b50:	469e      	mov	lr, r3
 8000b52:	4770      	bx	lr
